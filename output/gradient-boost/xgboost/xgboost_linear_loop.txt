##### xgb.Booster
raw: 2.1 Kb 
call:
  xgb.train(params = params, data = dtrain, nrounds = 500)
params (as set within xgb.train):
  objective = "reg:squarederror", booster = "gblinear", eta = "0.3", alpha = "0", lambda = "0", validate_parameters = "TRUE"
xgb.attributes:
  niter
callbacks:
  cb.print.evaluation(period = print_every_n)
# of features: 21 
niter: 500
nfeatures : 21 
[1] "IMPORTANCE MATRIX:"
               Feature         Weight
 1:     riquezafinTRUE  242546.171875
 2:       renthog1High  209522.140625
 3:         capitalist  144471.250000
 4:        renthog1Low -139893.546875
 5: homeownerNon-Owner -108636.000000
 6:    `self-employed`   97266.054688
 7:            `35-44`  -94432.265625
 8:               `75`   87483.882812
 9:             `0-34`  -86012.562500
10:            `65-75`   71448.898438
11: homeownerHomeowner   66537.718750
12:             worker  -55605.917969
13:            `54-65`   44146.039062
14:            manager   42036.335938
15:        (Intercept)   41736.949219
16:     renthog1Middle   40412.222656
17:            `45-54`  -16228.273438
18:            retired   15510.122070
19:           inactive  -13928.441406
20:           sexWomen   -7836.098633
21:            sv_year      -5.170165
               Feature         Weight
