##### xgb.Booster
raw: 2.1 Kb 
call:
  xgb.train(params = params, data = dtrain, nrounds = 500)
params (as set within xgb.train):
  objective = "reg:squarederror", booster = "gblinear", eta = "0.3", alpha = "0", lambda = "0", validate_parameters = "TRUE"
xgb.attributes:
  niter
callbacks:
  cb.print.evaluation(period = print_every_n)
# of features: 21 
niter: 500
nfeatures : 21 
[1] "IMPORTANCE MATRIX:"
               Feature         Weight
 1:     riquezafinTRUE  242546.796875
 2:       renthog1High  209347.843750
 3:         capitalist  144184.859375
 4:        renthog1Low -140065.093750
 5: homeownerNon-Owner -108953.804688
 6:    `self-employed`   96981.328125
 7:            `35-44`  -94633.296875
 8:               `75`   87285.968750
 9:             `0-34`  -86211.781250
10:            `65-75`   71251.343750
11: homeownerHomeowner   66221.851562
12:             worker  -55890.433594
13:            `54-65`   43945.246094
14:            manager   41751.269531
15:        (Intercept)   41371.328125
16:     renthog1Middle   40237.863281
17:            `45-54`  -16429.597656
18:            retired   15219.882812
19:           inactive  -14213.388672
20:           sexWomen   -7836.380371
21:            sv_year      -4.242896
               Feature         Weight
