##### xgb.Booster
raw: 2.1 Kb 
call:
  xgb.train(params = params, data = dtrain, nrounds = 500)
params (as set within xgb.train):
  objective = "reg:squarederror", booster = "gblinear", eta = "0.3", alpha = "0", lambda = "0", validate_parameters = "TRUE"
xgb.attributes:
  niter
callbacks:
  cb.print.evaluation(period = print_every_n)
# of features: 21 
niter: 500
nfeatures : 21 
[1] "IMPORTANCE MATRIX:"
               Feature         Weight
 1:     riquezafinTRUE  242546.718750
 2:       renthog1High  210633.187500
 3:         capitalist  144373.359375
 4:        renthog1Low -138780.187500
 5: homeownerNon-Owner -109235.976562
 6:    `self-employed`   97170.234375
 7:            `35-44`  -95034.328125
 8:               `75`   86884.851562
 9:             `0-34`  -86613.460938
10:            `65-75`   70849.828125
11: homeownerHomeowner   65939.195312
12:             worker  -55701.375000
13:            `54-65`   43544.210938
14:            manager   41939.648438
15:     renthog1Middle   41524.238281
16:        (Intercept)   41104.746094
17:            `45-54`  -16830.595703
18:            retired   15408.446289
19:           inactive  -14024.474609
20:           sexWomen   -7838.940430
21:            sv_year      -4.314126
               Feature         Weight
