##### xgb.Booster
raw: 2.1 Kb 
call:
  xgb.train(params = params, data = dtrain, nrounds = 500)
params (as set within xgb.train):
  objective = "reg:squarederror", booster = "gblinear", eta = "0.3", alpha = "0", lambda = "0", validate_parameters = "TRUE"
xgb.attributes:
  niter
callbacks:
  cb.print.evaluation(period = print_every_n)
# of features: 21 
niter: 500
nfeatures : 21 
[1] "IMPORTANCE MATRIX:"
               Feature         Weight
 1:     riquezafinTRUE  242547.421875
 2:       renthog1High  209331.187500
 3:         capitalist  144498.906250
 4:        renthog1Low -140082.546875
 5: homeownerNon-Owner -108874.593750
 6:    `self-employed`   97295.500000
 7:            `35-44`  -94643.468750
 8:               `75`   87276.945312
 9:             `0-34`  -86222.492188
10:            `65-75`   71242.054688
11: homeownerHomeowner   66300.468750
12:             worker  -55576.003906
13:            `54-65`   43935.457031
14:            manager   42065.328125
15:        (Intercept)   41486.722656
16:     renthog1Middle   40221.230469
17:            `45-54`  -16439.503906
18:            retired   15532.791016
19:           inactive  -13899.428711
20:           sexWomen   -7838.120117
21:            sv_year      -4.564422
               Feature         Weight
