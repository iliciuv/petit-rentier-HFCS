##### xgb.Booster
raw: 2.1 Kb 
call:
  xgb.train(params = params, data = dtrain, nrounds = 500)
params (as set within xgb.train):
  objective = "reg:squarederror", booster = "gblinear", eta = "0.3", alpha = "0", lambda = "0", validate_parameters = "TRUE"
xgb.attributes:
  niter
callbacks:
  cb.print.evaluation(period = print_every_n)
# of features: 21 
niter: 500
nfeatures : 21 
[1] "IMPORTANCE MATRIX:"
               Feature         Weight
 1:     riquezafinTRUE  242545.921875
 2:       renthog1High  209412.843750
 3:         capitalist  144273.500000
 4:        renthog1Low -140001.609375
 5: homeownerNon-Owner -108615.546875
 6:    `self-employed`   97069.695312
 7:            `35-44`  -94970.625000
 8:               `75`   86946.085938
 9:             `0-34`  -86550.546875
10:            `65-75`   70911.609375
11: homeownerHomeowner   66558.656250
12:             worker  -55802.257812
13:            `54-65`   43607.988281
14:            manager   41840.933594
15:        (Intercept)   41746.492188
16:     renthog1Middle   40304.101562
17:            `45-54`  -16767.103516
18:            retired   15312.318359
19:           inactive  -14124.497070
20:           sexWomen   -7835.320312
21:            sv_year      -4.770469
               Feature         Weight
