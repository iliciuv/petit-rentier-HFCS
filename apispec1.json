{
    "servers": [
        {
            "url": "https://api.db.nomics.world/v22"
        }
    ],
    "definitions": {},
    "info": {
        "description": "This is the documentation of [DBnomics Web API](https://git.nomics.world/dbnomics/dbnomics-api",
        "termsOfService": null,
        "title": "DBnomics API",
        "version": "22.1.15"
    },
    "paths": {
        "/datasets/{provider_code}": {
            "get": {
                "parameters": [
                    {
                        "description": "Code of the provider",
                        "example": "AMECO",
                        "in": "path",
                        "name": "provider_code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Code of the dataset",
                        "example": "ZUTN",
                        "in": "path",
                        "name": "dataset_code",
                        "type": "string"
                    },
                    {
                        "default": 50,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "maximum": 500,
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of dataset",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "datasets": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "example": "CIS",
                                                        "type": "string"
                                                    },
                                                    "indexed_at": {
                                                        "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "json_data_commit_ref": {
                                                        "example": "23419d13aaf5d25f16bf140c161ac221014e56c6",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "example": "Composite Indicator of Systemic Stress",
                                                        "type": "string"
                                                    },
                                                    "nb_series": {
                                                        "example": 26,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "provider_code": {
                                                        "example": "ECB",
                                                        "type": "string"
                                                    },
                                                    "provider_name": {
                                                        "example": "European Central Bank",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 100,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "datasets"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond one or several datasets of a provider."
            }
        },
        "/datasets/{provider_code}/{dataset_code}": {
            "get": {
                "parameters": [
                    {
                        "description": "Code of the provider",
                        "example": "AMECO",
                        "in": "path",
                        "name": "provider_code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Code of the dataset",
                        "example": "ZUTN",
                        "in": "path",
                        "name": "dataset_code",
                        "type": "string"
                    },
                    {
                        "default": 50,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "maximum": 500,
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of dataset",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "datasets": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "example": "CIS",
                                                        "type": "string"
                                                    },
                                                    "indexed_at": {
                                                        "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "json_data_commit_ref": {
                                                        "example": "23419d13aaf5d25f16bf140c161ac221014e56c6",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "example": "Composite Indicator of Systemic Stress",
                                                        "type": "string"
                                                    },
                                                    "nb_series": {
                                                        "example": 26,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "provider_code": {
                                                        "example": "ECB",
                                                        "type": "string"
                                                    },
                                                    "provider_name": {
                                                        "example": "European Central Bank",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 100,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "datasets"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond one or several datasets of a provider."
            }
        },
        "/last-updates": {
            "get": {
                "parameters": [
                    {
                        "default": 100,
                        "description": "The numbers of datasets to return.",
                        "in": "query",
                        "maximum": 100,
                        "minimum": 0,
                        "name": "datasets.limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of datasets to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "datasets.offset",
                        "type": "integer"
                    },
                    {
                        "default": 100,
                        "description": "The numbers of providers to return.",
                        "in": "query",
                        "maximum": 100,
                        "minimum": 0,
                        "name": "providers.limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of providers to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "providers.offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of providers and datasets",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "datasets": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "example": "CIS",
                                                        "type": "string"
                                                    },
                                                    "indexed_at": {
                                                        "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "json_data_commit_ref": {
                                                        "example": "23419d13aaf5d25f16bf140c161ac221014e56c6",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "example": "Composite Indicator of Systemic Stress",
                                                        "type": "string"
                                                    },
                                                    "nb_series": {
                                                        "example": 26,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "provider_code": {
                                                        "example": "ECB",
                                                        "type": "string"
                                                    },
                                                    "provider_name": {
                                                        "example": "European Central Bank",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 100,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                },
                                "providers": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "example": "ECB",
                                                        "type": "string"
                                                    },
                                                    "indexed_at": {
                                                        "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "example": "European Central Bank",
                                                        "type": "string"
                                                    },
                                                    "region": {
                                                        "example": "eu",
                                                        "type": "string"
                                                    },
                                                    "terms_of_use": {
                                                        "example": "https://www.ecb.europa.eu/home/disclaimer/html/index.en.html",
                                                        "format": "uri",
                                                        "type": "string"
                                                    },
                                                    "website": {
                                                        "example": "https://www.ecb.europa.eu/",
                                                        "format": "uri",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 1000,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "datasets",
                                "providers"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a list of providers and a list of datasets sorted by creation/conversion date, most recent first."
            }
        },
        "/providers": {
            "get": {
                "parameters": [
                    {
                        "default": 1000,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of providers",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "nb_datasets": {
                                    "example": 9277,
                                    "type": "integer"
                                },
                                "nb_series": {
                                    "example": 409149274,
                                    "type": "integer"
                                },
                                "providers": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "example": "ECB",
                                                        "type": "string"
                                                    },
                                                    "indexed_at": {
                                                        "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "example": "European Central Bank",
                                                        "type": "string"
                                                    },
                                                    "region": {
                                                        "example": "eu",
                                                        "type": "string"
                                                    },
                                                    "terms_of_use": {
                                                        "example": "https://www.ecb.europa.eu/home/disclaimer/html/index.en.html",
                                                        "format": "uri",
                                                        "type": "string"
                                                    },
                                                    "website": {
                                                        "example": "https://www.ecb.europa.eu/",
                                                        "format": "uri",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 1000,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "datasets",
                                "providers",
                                "series"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a list of providers."
            }
        },
        "/providers/{provider_code}": {
            "get": {
                "parameters": [
                    {
                        "description": "Code of the provider",
                        "example": "AMECO",
                        "in": "path",
                        "name": "provider_code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A provider with its category tree",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "category_tree": {
                                    "items": {
                                        "example": [
                                            {
                                                "children": [
                                                    {
                                                        "code": "category-1.1"
                                                    },
                                                    {
                                                        "children": [
                                                            {
                                                                "code": "dataset-1"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "code": "category-1"
                                            }
                                        ],
                                        "properties": {
                                            "children": {
                                                "items": {
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "code": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "provider": {
                                    "properties": {
                                        "code": {
                                            "example": "ECB",
                                            "type": "string"
                                        },
                                        "indexed_at": {
                                            "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "name": {
                                            "example": "European Central Bank",
                                            "type": "string"
                                        },
                                        "region": {
                                            "example": "eu",
                                            "type": "string"
                                        },
                                        "terms_of_use": {
                                            "example": "https://www.ecb.europa.eu/home/disclaimer/html/index.en.html",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "website": {
                                            "example": "https://www.ecb.europa.eu/",
                                            "format": "uri",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "category_tree",
                                "provider"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a provider with its category tree."
            }
        },
        "/search": {
            "get": {
                "parameters": [
                    {
                        "default": 10,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "maximum": 100,
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "description": "Full-text search query",
                        "example": "GDP France",
                        "in": "query",
                        "name": "q",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of datasets",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "results": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "example": "CIS",
                                                        "type": "string"
                                                    },
                                                    "indexed_at": {
                                                        "example": "Wed, 19 Sep 2018 12:52:59 GMT",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "json_data_commit_ref": {
                                                        "example": "23419d13aaf5d25f16bf140c161ac221014e56c6",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "example": "Composite Indicator of Systemic Stress",
                                                        "type": "string"
                                                    },
                                                    "nb_matching_series": {
                                                        "example": 3,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "nb_series": {
                                                        "example": 26,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "provider_code": {
                                                        "example": "ECB",
                                                        "type": "string"
                                                    },
                                                    "provider_name": {
                                                        "example": "European Central Bank",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code",
                                                    "provider_code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 1000,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "results"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a list of datasets from a full-text search."
            }
        },
        "/series": {
            "get": {
                "parameters": [
                    {
                        "collectionFormat": "csv",
                        "description": "List of series IDs separated by commas. A series ID is formatted like `provider_code/dataset_code/series_code`. Series can belong to any provider and dataset.",
                        "example": "AMECO/ZUTN/EA19.1.0.0.0.ZUTN,AMECO/ZUTN/DNK.1.0.0.0.ZUTN,IMF/CPI/A.AT.PCPIT_IX",
                        "in": "query",
                        "items": {
                            "example": "AMECO/ZUTN/EA19.1.0.0.0.ZUTN",
                            "type": "string"
                        },
                        "name": "series_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": false,
                        "description": "Return facets in response.",
                        "in": "query",
                        "name": "facets",
                        "type": "bool"
                    },
                    {
                        "default": false,
                        "description": "Return observations for each series of the response.",
                        "in": "query",
                        "name": "observations",
                        "type": "bool"
                    },
                    {
                        "default": true,
                        "description": "Return providers and datasets metadata in response.",
                        "in": "query",
                        "name": "metadata",
                        "type": "bool"
                    },
                    {
                        "default": "json",
                        "description": "Format of the output. If using `csv` and response includes series of different frequencies, many CSV files will be produced, one per frequency, wrapped in a single ZIP file. Implies `observations=1` automatically.",
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "in": "query",
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Ensure that all the periods of each series are defined in every other series. Add `NA` (not available) values when needed. Must be used with parameter `observations=1`.",
                        "in": "query",
                        "name": "align_periods",
                        "type": "bool"
                    },
                    {
                        "default": 1000,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of series",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "datasets": {
                                    "type": "object"
                                },
                                "errors": {
                                    "items": {
                                        "properties": {
                                            "message": {
                                                "example": "Could not produce any series",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "message"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "providers": {
                                    "type": "object"
                                },
                                "series": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "dataset_code": {
                                                        "example": "ZUTN",
                                                        "type": "string"
                                                    },
                                                    "provider_code": {
                                                        "example": "AMECO",
                                                        "type": "string"
                                                    },
                                                    "series_code": {
                                                        "example": "AUT.1.0.0.0.ZUTN",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "dataset_code",
                                                    "provider_code",
                                                    "series_code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 100,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "datasets",
                                "providers",
                                "series"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a list of series found by IDs, belonging potentially to different providers and datasets."
            }
        },
        "/series/{provider_code}/{dataset_code}": {
            "get": {
                "parameters": [
                    {
                        "description": "The code of a provider.",
                        "in": "path",
                        "name": "provider_code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The code of a dataset.\n\nIf the dataset code ends with a format (e.g. `.csv`), some parameters will be preset: `format=csv`, `observations=1` and `align_periods=1`. Also, the `.csv` suffix will be removed from the dataset code.\n",
                        "in": "path",
                        "name": "dataset_code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A series code mask is an alternative way to express a dimension filter. Can't be used with `dimensions` parameter.\n\nSeries codes masks can designate many series by:\n- removing a constraint on a dimension, for example `M..PCPIEC_WT`;\n- enumerating many values for a dimension, separated by a '+', for example `M.FR+DE.PCPIEC_WT`;\n  - if values contains '+', they can be protected with double quotes. Example: 'A+\"FR+BE\"' will enumerate series for 'A' and 'FR+BE' dimensions.\n- combining these possibilities many times in the same code mask.\n\nIf the rightmost dimension value code is removed, then the final '.' can be removed too: `A.FR.` = `A.FR`.\n\nIf the series code ends with a format (e.g. `.csv`), some parameters will be preset: `format=csv` and `observations=1`. Also, the `.csv` suffix will be removed from the series code.\n",
                        "in": "path",
                        "name": "series_code",
                        "type": "string"
                    },
                    {
                        "description": "JSON object describing the dimensions filtering the search. Can't be used with `series_code` parameter.",
                        "example": "{\"FREQ\": [\"A\"]}",
                        "in": "query",
                        "name": "dimensions",
                        "type": "string"
                    },
                    {
                        "description": "Full-text search query",
                        "example": "GDP France",
                        "in": "query",
                        "name": "q",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Return facets in response.",
                        "in": "query",
                        "name": "facets",
                        "type": "bool"
                    },
                    {
                        "default": false,
                        "description": "Return observations for each series of the response.",
                        "in": "query",
                        "name": "observations",
                        "type": "bool"
                    },
                    {
                        "default": true,
                        "description": "Return providers and datasets metadata in response.",
                        "in": "query",
                        "name": "metadata",
                        "type": "bool"
                    },
                    {
                        "default": "json",
                        "description": "Format of the output. If using `csv` and response includes series of different frequencies, many CSV files will be produced, one per frequency, wrapped in a single ZIP file. Implies `observations=1` automatically.",
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "in": "query",
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Ensure that all the periods of each series are defined in every other series. Add `NA` (not available) values when needed. Must be used with parameter `observations=1`.",
                        "in": "query",
                        "name": "align_periods",
                        "type": "bool"
                    },
                    {
                        "default": 1000,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of series",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "dataset": {
                                    "type": "object"
                                },
                                "errors": {
                                    "items": {
                                        "properties": {
                                            "message": {
                                                "example": "Could not produce any series",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "message"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "provider": {
                                    "type": "object"
                                },
                                "series": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "dataset_code": {
                                                        "example": "ZUTN",
                                                        "type": "string"
                                                    },
                                                    "provider_code": {
                                                        "example": "AMECO",
                                                        "type": "string"
                                                    },
                                                    "series_code": {
                                                        "example": "AUT.1.0.0.0.ZUTN",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "dataset_code",
                                                    "provider_code",
                                                    "series_code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 100,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                },
                                "series_dimensions_facets": {
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "dataset",
                                "provider",
                                "series"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a list of series belonging to the same dataset."
            }
        },
        "/series/{provider_code}/{dataset_code}/{series_code}": {
            "get": {
                "parameters": [
                    {
                        "description": "The code of a provider.",
                        "in": "path",
                        "name": "provider_code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The code of a dataset.\n\nIf the dataset code ends with a format (e.g. `.csv`), some parameters will be preset: `format=csv`, `observations=1` and `align_periods=1`. Also, the `.csv` suffix will be removed from the dataset code.\n",
                        "in": "path",
                        "name": "dataset_code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A series code mask is an alternative way to express a dimension filter. Can't be used with `dimensions` parameter.\n\nSeries codes masks can designate many series by:\n- removing a constraint on a dimension, for example `M..PCPIEC_WT`;\n- enumerating many values for a dimension, separated by a '+', for example `M.FR+DE.PCPIEC_WT`;\n  - if values contains '+', they can be protected with double quotes. Example: 'A+\"FR+BE\"' will enumerate series for 'A' and 'FR+BE' dimensions.\n- combining these possibilities many times in the same code mask.\n\nIf the rightmost dimension value code is removed, then the final '.' can be removed too: `A.FR.` = `A.FR`.\n\nIf the series code ends with a format (e.g. `.csv`), some parameters will be preset: `format=csv` and `observations=1`. Also, the `.csv` suffix will be removed from the series code.\n",
                        "in": "path",
                        "name": "series_code",
                        "type": "string"
                    },
                    {
                        "description": "JSON object describing the dimensions filtering the search. Can't be used with `series_code` parameter.",
                        "example": "{\"FREQ\": [\"A\"]}",
                        "in": "query",
                        "name": "dimensions",
                        "type": "string"
                    },
                    {
                        "description": "Full-text search query",
                        "example": "GDP France",
                        "in": "query",
                        "name": "q",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Return facets in response.",
                        "in": "query",
                        "name": "facets",
                        "type": "bool"
                    },
                    {
                        "default": false,
                        "description": "Return observations for each series of the response.",
                        "in": "query",
                        "name": "observations",
                        "type": "bool"
                    },
                    {
                        "default": true,
                        "description": "Return providers and datasets metadata in response.",
                        "in": "query",
                        "name": "metadata",
                        "type": "bool"
                    },
                    {
                        "default": "json",
                        "description": "Format of the output. If using `csv` and response includes series of different frequencies, many CSV files will be produced, one per frequency, wrapped in a single ZIP file. Implies `observations=1` automatically.",
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "in": "query",
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Ensure that all the periods of each series are defined in every other series. Add `NA` (not available) values when needed. Must be used with parameter `observations=1`.",
                        "in": "query",
                        "name": "align_periods",
                        "type": "bool"
                    },
                    {
                        "default": 1000,
                        "description": "The numbers of items to return.",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set.",
                        "in": "query",
                        "minimum": 0,
                        "name": "offset",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of series",
                        "schema": {
                            "properties": {
                                "_meta": {
                                    "properties": {
                                        "version": {
                                            "example": "0.22.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "version"
                                    ],
                                    "type": "object"
                                },
                                "dataset": {
                                    "type": "object"
                                },
                                "errors": {
                                    "items": {
                                        "properties": {
                                            "message": {
                                                "example": "Could not produce any series",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "message"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "provider": {
                                    "type": "object"
                                },
                                "series": {
                                    "properties": {
                                        "docs": {
                                            "items": {
                                                "properties": {
                                                    "dataset_code": {
                                                        "example": "ZUTN",
                                                        "type": "string"
                                                    },
                                                    "provider_code": {
                                                        "example": "AMECO",
                                                        "type": "string"
                                                    },
                                                    "series_code": {
                                                        "example": "AUT.1.0.0.0.ZUTN",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "dataset_code",
                                                    "provider_code",
                                                    "series_code"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "example": 100,
                                            "type": "integer"
                                        },
                                        "num_found": {
                                            "example": 65,
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "example": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "docs",
                                        "limit",
                                        "num_found",
                                        "offset"
                                    ],
                                    "type": "object"
                                },
                                "series_dimensions_facets": {
                                    "type": "object"
                                }
                            },
                            "required": [
                                "_meta",
                                "dataset",
                                "provider",
                                "series"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Respond a list of series belonging to the same dataset."
            }
        }
    },
    "swagger": "2.0"
}